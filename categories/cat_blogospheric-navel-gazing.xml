<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Lightly Seared On The Reality Grill (Blogospheric navel gazing)</title><link>http://samjuvonen.com/</link><description></description><atom:link type="application/rss+xml" href="http://samjuvonen.com/categories/cat_blogospheric-navel-gazing.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 21 Aug 2016 23:50:11 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Choosing a blogging tool</title><link>http://samjuvonen.com/posts/choosing-a-blogging-tool/</link><dc:creator>sjj</dc:creator><description>&lt;p&gt;
So, once one has decided to cast one's words out to the merciless seas of
    information a.k.a. The Internet, how to go about it?
&lt;/p&gt;

&lt;p&gt;
The easiest solution is of course using one of the many pre-packaged blog
sites (Blogger, Wordpress, etc). This is a perfectly valid way to do it,
especially if one is not technically inclined. But, you know, boring if one is.
&lt;/p&gt;

&lt;p&gt;
I want to keep things as simple as possible, make sure I own my data, have
total freedom to play with templates and themes, and have flexibility with
how to write for the site. I don't want to deal with the headaches
associated with running a database backed site like Wordpress either.
&lt;/p&gt;

&lt;p&gt;
The best thing is a static site generator. The idea has been around forever,
it's how it all worked on the early internet (well, except all the HTML was
hand crafted, or you used some terrible "HTML editor"). There are dozens
of the modern static site generators around, from Jekyll which made it
popular, to he new hotness on the block, Hugo. I chose to go with neither of
those. Instead I chose &lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt;.
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Why Nikola&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
&lt;a href="http://getnikola.com"&gt;Nikola&lt;/a&gt; has been around for a while. It may not be as popular as some of the
other comparable tools, but it is certainly one of the most flexible. It
supports most markup languages out of the box: Markdown, Restructured Text,
Asciidoc, even Emacs Orgmode as well as hand-written HTML. The competition
tends to be mostly just Markdown.
&lt;/p&gt;

&lt;p&gt;
It is written in Python, which I understand better than Ruby or Go. It
seems to be the most active of the Python-based systems today. I haven't
delved into the source, but it appears altogether well thought out.
&lt;/p&gt;

&lt;p&gt;
The only downside with Nikola, and most likely the reason it is not as
popular as it could be, is that its theme selection is rather limited and
frankly not very pretty. Since I've taken an interest in front-end web dev
lately (just for fun for now), I'm hoping I can contribute a theme or two. So
for me personally this downside is an opportunity.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Why Github Pages&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
For a tech-focused blog, publishing for free on &lt;a href="https://pages.github.com"&gt;Github Pages&lt;/a&gt; (github.io) is
a no-brainer. With a static blog engine, you get the freedom to work on
your posts anywhere, even offline. And with Github, you of course have your
precious writing under version control. Backups are never more than a
simple &lt;code&gt;git clone&lt;/code&gt; / &lt;code&gt;git pull&lt;/code&gt;. And should I decide to move elsewhere, I can
just &lt;code&gt;git push&lt;/code&gt; to an AWS &lt;a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html"&gt;S3 backed static blog&lt;/a&gt;, for example.
&lt;/p&gt;

&lt;p&gt;
Nikola has support for Github Pages, &lt;code&gt;nikola github_deploy&lt;/code&gt; does all the
magic, putting the source files in one git branch, and the rendered HTML
into the master branch. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Here today&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
This is where I'm today. If Nikola turns out to be more pain than it's
worth, I can easily switch to another site generator. I own my own data,
it's in plain text, the data format of kings and unix beards. The software
is free and Free. Isn't modern life pretty damn wonderful?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>http://samjuvonen.com/posts/choosing-a-blogging-tool/</guid><pubDate>Thu, 18 Aug 2016 19:17:14 GMT</pubDate></item><item><title>To blog, or not</title><link>http://samjuvonen.com/posts/to-blog-or-not/</link><dc:creator>sjj</dc:creator><description>&lt;p&gt;
This is a blogospheric navel gazing kind of first post. It aims to have more
words than "Hello World", and "Testing". You Have Been Warned.
&lt;/p&gt;

&lt;p&gt;
To blog or not to blog, that is the question. In my case it is perhaps
answered by the fact that this is published on my shiny new blog. Let's hope
I make it past the second post hurdle.
&lt;/p&gt;

&lt;p&gt;
I've made several attempts at blogging over the years since the idea was
young. Thankfully internet bitrot has eaten those away. I hope. This time is
different, ha!
&lt;/p&gt;

&lt;p&gt;
The aims of this Yet Another Tech Blog are modest. I hope to use it to
organize my own thoughts. Writing in public is a good way to clarify the
goings-on in one's head-meat. Apart from this notes-to-self aspect I hope
it'll be useful for highlighting some solutions and tidbits I come across on
my virtual travels or develop myself.
&lt;/p&gt;

&lt;p&gt;
Wish me luck!
&lt;/p&gt;</description><guid>http://samjuvonen.com/posts/to-blog-or-not/</guid><pubDate>Thu, 18 Aug 2016 19:12:28 GMT</pubDate></item></channel></rss>